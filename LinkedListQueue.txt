import java.util.Arrays;

public class LinkedListQueue {
	private class Node{
		private int value;
		private Node next;
		
		private Node(int value){
			this.value = value;
		}
	}
	private Node first, last;
	private int size;
	
	public boolean isEmpty(){
		return first == null;
	}
	
	public void enqueue(int value){
		Node node = new Node(value);
		if(isEmpty()){
			first = last = node;
		}
		else if(first == last){
			first.next = node;
			last = node;
		}
		else{
			last.next = node;
			last = node;
		}
		size++;
	}
	
	public int dequeue(){
		if(isEmpty()){
			System.out.println("Illegal State Exception");
			return -1;
		}
		else{
			int value = first.value;
			first = first.next;
			size--;
			return value;
		}
	}
	
	public int size(){
		return size;
	}
	
	public int peek(){
		if(isEmpty()){
			System.out.println("Illegal State Exception");
			return -1;
		}
		else{
			return first.value;
		}
	}
	
	public void print(){
		Node current = first;
		while(current != null){
			System.out.print(current.value+" ");
			current = current.next;
		}
		System.out.println();
	}
}
