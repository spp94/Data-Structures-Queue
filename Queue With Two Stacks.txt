import java.util.*;
public class QueueWithTwoStacks {
 private Stack<Integer> stack1 = new Stack<>();
 private Stack<Integer> stack2 = new Stack<>();
 
 public void enqueue(int value){
	 stack1.push(value);
 }
 
 public int dequeue(){
	 if(isEmpty()){
		 System.out.println("Queue Underflow exception");
		 return -1;
	 }
	 else{
	 if(stack2.isEmpty()){
		 moveFromStack1ToStack2();
	 }
	 return stack2.pop();
	 }
 }
 
 public void moveFromStack1ToStack2(){
	 while(!stack1.isEmpty()){
		 stack2.push(stack1.pop());
	 }
 }
 
 public int peek(){
	 if(isEmpty()){
		 return -1;
	 }
	 else{
		 if(stack2.isEmpty()){
			 moveFromStack1ToStack2();
		 }
		 return stack2.peek();
	 }
 }
 
 public boolean isEmpty(){
	 return (stack1.isEmpty() && stack2.isEmpty());
 }
 
}
